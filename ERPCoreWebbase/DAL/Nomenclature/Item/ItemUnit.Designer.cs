//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
using NAS.DAL.Invoice;
using NAS.DAL.Inventory.StockCart;
using NAS.DAL.Inventory.Ledger;
using NAS.DAL.Inventory.Journal;
using NAS.DAL.Sales.Price;
using NAS.DAL.Inventory.Lot;
using NAS.DAL.Inventory.Audit;
namespace NAS.DAL.Nomenclature.Item
{
     
    public partial class ItemUnit : XPCustomObject
    {
        private char _PropertyName;
        Guid fItemUnitId;
		[Key(true)]
        public Guid ItemUnitId
        {
            get { return fItemUnitId; }
            set { SetPropertyValue<Guid>("ItemUnitId", ref fItemUnitId, value); }
		}

        double fNumRequired;
        public double NumRequired
        {
            get { return fNumRequired; }
            set { SetPropertyValue<double>("NumRequired", ref fNumRequired, value); }
        }
		DateTime fRowCreationTimeStamp;
		public DateTime RowCreationTimeStamp {
			get { return fRowCreationTimeStamp; }
			set { SetPropertyValue<DateTime>("RowCreationTimeStamp", ref fRowCreationTimeStamp, value); }
		}
        short fRowStatus;
        public short RowStatus
        {
			get { return fRowStatus; }
            set { SetPropertyValue<short>("RowStatus", ref fRowStatus, value); }
		}

        private double fCoefficient;
        public double Coefficient
        {
            get { return fCoefficient; }
            set { SetPropertyValue<double>("Coefficient", ref fCoefficient, value); }
        }

        private bool fIsDefault;
        public bool IsDefault
        {
            get { return fIsDefault; }
            set { SetPropertyValue<bool>("IsDefault", ref fIsDefault, value); }
        }

        #region References
        ItemUnit fParentItemUnitId;
        [Association(@"ParentOf")]
        public ItemUnit ParentItemUnitId
        {
            get { return fParentItemUnitId; }
            set { SetPropertyValue<ItemUnit>("ParentItemUnitId", ref fParentItemUnitId, value); }
        }

        [Association(@"ParentOf", typeof(ItemUnit)), Aggregated]
        public XPCollection<ItemUnit> ItemUnits
        {
            get
            {
                return GetCollection<ItemUnit>("ItemUnits");
            }
        }
        Item fItemId;
        [Association(@"ItemUnitReferencesItem")]
        public Item ItemId
        {
            get { return fItemId; }
            set { SetPropertyValue<Item>("ItemId", ref fItemId, value); }
        }
        Unit fUnitId;
        [Association(@"ItemUnitReferencesUnit")]
        public Unit UnitId
        {
            get { return fUnitId; }
            set { SetPropertyValue<Unit>("UnitId", ref fUnitId, value); }
        }
        ItemUnitRelationType fItemUnitRelationTypeId;
        [Association(@"ItemUnitReferencesItemUnitRelationType")]
        public ItemUnitRelationType ItemUnitRelationTypeId
        {
            get { return fItemUnitRelationTypeId; }
            set { SetPropertyValue<ItemUnitRelationType>("ItemUnitRelationTypeId", ref fItemUnitRelationTypeId, value); }
        }

        [Association("ItemUnitReferencesInventoryItems")]
        public XPCollection<NAS.DAL.Inventory.Item.InventoryItem> InventoryItemId
        {
            get
            {
                return GetCollection<NAS.DAL.Inventory.Item.InventoryItem>("InventoryItemId");
            }
        }
        //Association with BillItem
        [Association(@"BillItemReferencesItemUnit")]
        public XPCollection<BillItem> BillItemId
        {
            get
            {
                return GetCollection<BillItem>("BillItemId");
            }
        }
        [Association(@"StockCartItemReferencesItemUnit", typeof(StockCartItem))]
        public XPCollection<StockCartItem> StockCartItems { get { return GetCollection<StockCartItem>("StockCartItems"); } }
        [Association(@"InventoryLedgerReferencesItemUnit", typeof(InventoryLedger))]
        public XPCollection<InventoryLedger> InventoryLedgers { get { return GetCollection<InventoryLedger>("InventoryLedgers"); } }
        [Association(@"InventoryCOGSReferencesItemUnit", typeof(COGS))]
        public XPCollection<COGS> COGSs { get { return GetCollection<COGS>("COGSs"); } }
        [Association(@"InventoryJournalReferencesItemUnit", typeof(InventoryJournal))]
        public XPCollection<InventoryJournal> InventoryJournals { get { return GetCollection<InventoryJournal>("InventoryJournals"); } }
        [Association(@"PricePolicyItemUnitConditionReferencesItemUnit", typeof(PricePolicyItemUnitCondition))]
        public XPCollection<PricePolicyItemUnitCondition> PricePolicyItemUnitConditions { get { return GetCollection<PricePolicyItemUnitCondition>("PricePolicyItemUnitConditions"); } }
        //[Association(@"LotReferencesItemUnit", typeof(Lot))]
        //public XPCollection<Lot> Lots { get { return GetCollection<Lot>("Lots"); } }
        [Association(@"InventoryAuditItemUnitReferencesItemUnit", typeof(InventoryAuditItemUnit))]
        public XPCollection<InventoryAuditItemUnit> InventoryAuditItemUnits { get { return GetCollection<InventoryAuditItemUnit>("InventoryAuditItemUnits"); } }
        #endregion
    }

}
