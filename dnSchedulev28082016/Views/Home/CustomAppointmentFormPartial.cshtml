@model Schedule
@using System.Web.UI.WebControls

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-md-8">
            @if (Model.EventType == 0 || Model.EventType == 1)
            {
                <div class="row">
                    <div class="col-md-2">
                        @Html.DevExpress().Label(
                        settings =>
                        {
                            settings.AssociatedControlName = "OpportunityId";
                            settings.Text = "Opportunity:";
                            settings.Width = Unit.Percentage(100);
                        }).GetHtml()
                    </div>
                    <div class="col-md-4">
                        @Html.DevExpress().ComboBox(
                        settings =>
                        {
                            settings.Name = "OpportunityId";
                            settings.Properties.ValueType = typeof(Int32);
                            settings.Properties.ValueField = "ID";
                            settings.Properties.TextField = "Name";
                            settings.Width = Unit.Percentage(100);
                        }).BindList(ViewBag.ResourceDataSource).Bind(Model.OpportunityId).GetHtml()
                    </div>
                    <div class="col-md-2">
                        @Html.DevExpress().CheckBox(
                        settings =>
                        {
                            settings.Name = "HasReminder";
                            settings.Text = "Reminder";
                            settings.Properties.ClientSideEvents.CheckedChanged = "OnHasReminderCheckedChanged";
                        }).Bind(Model.HasReminder).GetHtml()
                    </div>
                    <div class="col-md-4">
                        @{ TimeSpan timeBeforeStart = Model.Reminder != null ? Model.Reminder.TimeBeforeStart : TimeSpan.FromMinutes(15); }
                        @Html.DevExpress().ComboBox(
                        settings =>
                        {
                            settings.Name = "Reminder.TimeBeforeStart";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ValueType = typeof(TimeSpan);
                            settings.Properties.ValueField = "Value";
                            settings.Properties.TextField = "Text";
                            settings.Properties.ClientSideEvents.Init = "OnTimeBeforeStartComboBoxInit";
                        }).BindList(ViewBag.ReminderDataSource).Bind(timeBeforeStart).GetHtml()
                    </div>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-md-4">
                        @Html.DevExpress().CheckBox(
                        settings =>
                        {
                            settings.Name = "HasReminder";
                            settings.Text = "Reminder";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ClientSideEvents.CheckedChanged = "OnHasReminderCheckedChanged";
                        }).Bind(Model.HasReminder).GetHtml()
                    </div>
                    <div class="col-md-8">
                        @{ TimeSpan timeBeforeStart = Model.Reminder != null ? Model.Reminder.TimeBeforeStart : TimeSpan.FromMinutes(15); }
                        @Html.DevExpress().ComboBox(
                        settings =>
                        {
                            settings.Name = "Reminder.TimeBeforeStart";
                            settings.Width = Unit.Percentage(100);
                            settings.Properties.ValueType = typeof(TimeSpan);
                            settings.Properties.ValueField = "Value";
                            settings.Properties.TextField = "Text";
                            settings.Properties.ClientSideEvents.Init = "OnTimeBeforeStartComboBoxInit";
                        }).BindList(ViewBag.ReminderDataSource).Bind(timeBeforeStart).GetHtml()
                    </div>
                </div>
            }
            @*<div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-8"></div>
        </div>*@
            <div class="row">
                <div class="col-md-2">
                    @Html.DevExpress().Label(
                settings =>
                {
                    settings.AssociatedControlName = "Subject";
                    settings.Text = "Title:";
                    settings.Width = Unit.Percentage(100);
                }).GetHtml()
                </div>
                <div class="col-md-10">
                    @Html.DevExpress().TextBox(
                    settings =>
                    {
                        settings.Name = "Subject";
                        settings.ShowModelErrors = true;
                        settings.Properties.ValidationSettings.Display = Display.Dynamic;
                        settings.Width = Unit.Percentage(100);
                    }).Bind(Model.Subject).GetHtml()
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    @Html.DevExpress().Label(
                settings =>
                {
                    settings.AssociatedControlName = "Description";
                    settings.Text = "Description:";
                    settings.Width = Unit.Percentage(100);
                }).GetHtml()
                </div>
                <div class="col-md-10">
                    @Html.DevExpress().Memo(
                settings =>
                {
                    settings.Name = "Description";
                    settings.Properties.Rows = 5;
                    settings.ShowModelErrors = true;
                    settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Width = Unit.Percentage(100);
                }).Bind(Model.Description).GetHtml()
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    @Html.DevExpress().Label(
                    settings => {
                        settings.AssociatedControlName = "Price";
                        settings.Text = "Price:";
                        settings.Width = Unit.Percentage(100);
                    }).GetHtml()
                </div>
                <div class="col-md-10">
                   @Html.DevExpress().TextBox(
                    settings =>
                    {
                        settings.Name = "Price";
                        settings.ShowModelErrors = true;
                        settings.Properties.ValidationSettings.Display = Display.Dynamic;
                        settings.Width = Unit.Percentage(100);
                    }).Bind(Model.Price).GetHtml()                  
                </div>
            </div>
            <div class="row">
                <div class="col-md-1">
                    @Html.DevExpress().CheckBox(
                settings =>
                {
                    settings.Name = "AllDay";
                    settings.Width = Unit.Percentage(100);
                }).Bind(Model.AllDay).GetHtml()
                </div>
                <div class="col-md-11">
                    @Html.DevExpress().Label(
                settings =>
                {
                    settings.AssociatedControlName = "AllDay";
                    settings.Text = "All Day Event";
                    settings.Width = Unit.Percentage(100);
                }).GetHtml()
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <!--#region Priority  -->
            <div class="row">
                <div class="col-md-5">
                    @Html.DevExpress().Label(
                    settings =>
                    {
                        settings.AssociatedControlName = "Label";
                        settings.Text = "Priority:";
                        settings.Width = Unit.Percentage(100);
                    }).GetHtml()
                </div>
                <div class="col-md-7">
                    @Html.DevExpress().ComboBox(
                   settings =>
                   {
                       settings.Name = "Label";
                       settings.Properties.ValueType = typeof(Int32);
                       settings.Properties.ValueField = "Value";
                       settings.Properties.TextField = "Text";
                       settings.Width = Unit.Percentage(100);
                   }).BindList(ViewBag.LabelDataSource).Bind(Model.Label).GetHtml()
                </div>
            </div>
            <!--#endregion -->
        
            <!--#region Status  -->
            <div class="row">
                <div class="col-md-5">                    
                    @Html.DevExpress().Label(
                    settings =>
                    {
                        settings.AssociatedControlName = "Status";
                        settings.Text = "Status:";
                        settings.Width = Unit.Percentage(100);
                    }).GetHtml()
                </div>
                <div class="col-md-7">
                    @Html.DevExpress().ComboBox(
                settings =>
                {
                    settings.Name = "Status";
                    settings.Properties.ValueType = typeof(Int32);
                    settings.Properties.ValueField = "Value";
                    settings.Properties.TextField = "Text";
                    settings.Width = Unit.Percentage(100);
                }).BindList(ViewBag.StatusDataSource).Bind(Model.Status).GetHtml()
                </div>
            </div>
            <!--#endregion -->

            <!--#region Customer  -->
            <div class="row">
                <div class="col-md-5">
                    @Html.DevExpress().Label(
                    settings =>
                    {
                        settings.AssociatedControlName = "CustomerId";
                        settings.Text = "Customer:";
                        settings.Width = Unit.Percentage(100);
                    }).GetHtml()
                </div>
                <div class="col-md-7">    
                    @Html.DevExpress().ComboBox(
                    settings =>
                    {
                        settings.Name = "CustomerId";//dn must same name field in model
                        settings.Properties.ValueType = typeof(Int32);
                        settings.Properties.ValueField = "ID";
                        settings.Properties.TextField = "Name";
                        settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                        settings.Properties.DropDownStyle = DropDownStyle.DropDown; 
                        settings.Width = Unit.Percentage(100);
                    }).BindList(ViewBag.CustomerDataSource).Bind(Model.CustomerId).GetHtml()
                    @*@Html.DevExpress().TextBox(
                        settings =>
                        {
                            settings.Name = "CustomerId";
                            settings.ShowModelErrors = true;
                            settings.Properties.ValidationSettings.Display = Display.Dynamic;
                            settings.Width = Unit.Percentage(100);
                        }).Bind(Model.CustomerId).GetHtml()*@
                </div>
            </div>
            <!--#endregion -->
            <!--#region StartTime  -->
            <div class="row">
                <div class="col-md-5">
                    @*Start time:*@ From Date:
                </div>
                <div class="col-md-7">
                    @Html.DevExpress().DateEdit(
                settings =>
                {
                    settings.Name = "StartTime";
                    settings.Properties.EditFormat = EditFormat.DateTime;
                    settings.ShowModelErrors = true;
                    settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Width = Unit.Percentage(100);
                }).Bind(Model.StartTime).GetHtml()
                </div>
            </div>
            <!--#endregion -->
            <!--#region EndTime  -->
            <div class="row">
                <div class="col-md-5">
                    @*End time:*@ Due Date:
                </div>
                <div class="col-md-7">
                    @Html.DevExpress().DateEdit(
                settings =>
                {
                    settings.Name = "EndTime";
                    settings.Properties.EditFormat = EditFormat.DateTime;
                    settings.ShowModelErrors = true;
                    settings.Properties.ValidationSettings.Display = Display.Dynamic;
                    settings.Width = Unit.Percentage(100);
                }).Bind(Model.EndTime).GetHtml()
                </div>
            </div>
            <!--#endregion -->          
        </div>
        <div class="col-md-12">
            @Html.DevExpress().AppointmentRecurrenceForm(ViewBag.AppointmentRecurrenceFormSettings).GetHtml()
        </div>
    </div>
    <table cellpadding="0" cellspacing="0" style="width: 100%; height: 35px;">
        <tr>
            <td style="width: 100%; height: 100%;" align="center">
                <table style="height: 100%;">
                    <tr>
                        <td>
                            @Html.DevExpress().Button(
                        settings =>
                        {
                            settings.Name = "Apply";
                            settings.Text = "Ok";
                            settings.Width = Unit.Pixel(91);
                            settings.ClientSideEvents.Click = "OnAppointmentFormSave";
                        }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().Button(
                        settings =>
                        {
                            settings.Name = "Cancel";
                            settings.Text = "Cancel";
                            settings.ClientSideEvents.Click = "function(s, e){ scheduler.AppointmentFormCancel(); }";
                            settings.Width = Unit.Pixel(91);
                        }).GetHtml()
                        </td>
                        <td>
                            @Html.DevExpress().Button(
                        settings =>
                        {
                            settings.Name = "Delete";
                            settings.Text = "Delete";
                            settings.Width = Unit.Pixel(91);
                            settings.Enabled = ViewBag.DeleteButtonEnabled;
                            settings.ClientSideEvents.Click = "function(s, e){ scheduler.AppointmentFormDelete(); }";
                        }).GetHtml()
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
    <table cellpadding="0" cellspacing="0" style="width: 100%;">
        <tr>
            <td style="width: 100%;" align="left">
                @Html.DevExpress().SchedulerStatusInfo(
            settings =>
            {
                settings.Name = "schedulerStatusInfo";
                settings.Priority = 1;
                settings.SchedulerName = "scheduler";
            }).GetHtml()
            </td>
        </tr>

    </table>
}