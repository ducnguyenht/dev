//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
using NAS.DAL.Sales.Price;
using NAS.DAL.Accounting.Tax;
namespace NAS.DAL.Invoice
{

    public partial class TaxType : XPCustomObject
    {
        Guid fTaxTypeId;
		[Key(true)]
        public Guid TaxTypeId
        {
            get { return fTaxTypeId; }
            set { SetPropertyValue<Guid>("TaxTypeId", ref fTaxTypeId, value); }
		}

        string fCode;
        [Size(36)]
        public string Code
        {
            get { return fCode; }
            set { SetPropertyValue<string>("Code", ref fCode, value); }
        }

        string fName; 
        [Size(255)]
        public string Name
        {
            get { return fName; }
            set { SetPropertyValue<string>("Name", ref fName, value); }
        }

		DateTime fRowCreationTimeStamp;
		public DateTime RowCreationTimeStamp {
			get { return fRowCreationTimeStamp; }
			set { SetPropertyValue<DateTime>("RowCreationTimeStamp", ref fRowCreationTimeStamp, value); }
		}

        private string fDescription;
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>("Description", ref fDescription, value); }
        }

        private bool fIsInternal;
        public bool IsInternal
        {
            get { return fIsInternal; }
            set { SetPropertyValue<bool>("IsInternal", ref fIsInternal, value); }
        }

        short fRowStatus;
        public short RowStatus
        {
            get { return fRowStatus; }
            set { SetPropertyValue<short>("RowStatus", ref fRowStatus, value); }
        }

        [Association(@"PriceFormulaTaxAddedReferencesTaxType", typeof(PriceFormulaTaxAdded))]
        public XPCollection<PriceFormulaTaxAdded> PriceFormulaTaxAddeds
        {
            get
            {
                return GetCollection<PriceFormulaTaxAdded>("PriceFormulaTaxAddeds");
            }
        }

        [Association(@"TaxReferencesNAS.DAL.Invoice.TaxType", typeof(Tax))]
        public XPCollection<Tax> Taxs { get { return GetCollection<Tax>("Taxs"); } }

        protected override void OnChanged(string propertyName, object oldValue, object newValue)
        {
            //if (IsInternal && oldValue != null && newValue != null && !oldValue.ToString().Equals(newValue))
            //    throw new Exception(@"Không thể sửa đổi hoặc xóa các thuế mặc định");

            base.OnChanged(propertyName, oldValue, newValue);
        }
	}

}
